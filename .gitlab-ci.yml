image: docker:latest
services:
- docker:disba1

# Environment variables applied to environments via the runner:
# 
# MY_PROJECT      example: spring-app
# MY_VERSION      example: 1
# MY_US           example: g3rlab
# DOCKER_EMAIL    
# DOCKER_US       <docker username>
# DOCKER_PW       <docker password>
# DOCKER_REGISTRY example: docker.io
# GCLOUD_KEY      <public key service account>
# GCLOUD_CLUSTER  gplab-gke
# GCLOUD_PROJECT  hale-kite-253908
# GCLOUD_ZONE     europe-west4-a

variables:
  DOCKER_DRIVER: overlay
  SPRING_PROFILES_ACTIVE: gitlab-ci

stages:
- build
- package
- deploy

maven-build:
  image: maven:3-jdk-8
  stage: build
  script: "mvn package -B"
  artifacts:
    paths:
    - target/*.jar

docker-build:
  stage: package
  script:
  - docker build -t registry.gitlab.com/$MY_US/${MY_PROJECT}-${MY_PROJECT_ID} .
  - docker images
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
  - docker push registry.gitlab.com/$MY_US/${MY_PROJECT}-${MY_PROJECT_ID}
  - docker tag registry.gitlab.com/$MY_US/${MY_PROJECT}-${MY_PROJECT_ID} $DOCKER_REGISTRY/$MY_US/${MY_PROJECT}-${MY_PROJECT_ID}
  - docker images
  - docker login -u $DOCKER_US -p $DOCKER_PW $DOCKER_REGISTRY
  - docker push $MY_US/${MY_PROJECT}-${MY_PROJECT_ID}

k8s-deploy:
  image: google/cloud-sdk
  stage: deploy
  script:
  - echo "$GCLOUD_KEY" > key.json
  - gcloud auth activate-service-account --key-file key.json
  - gcloud config set compute/zone $GCLOUD_ZONE
  - gcloud config set project $GCLOUD_PROJECT
  - gcloud config set container/use_client_certificate True
  - gcloud container clusters get-credentials $GCLOUD_CLUSTER
  - kubectl delete secret registry.gitlab.com
  - kubectl create secret docker-registry registry.gitlab.com --docker-server=https://registry.gitlab.com --docker-username=$DOCKER_US --docker-password=$DOCKER_PW --docker-email=$DOCKER_EMAIL
  - kubectl apply -f deployment.yml
